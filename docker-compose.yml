version: "3"

networks:
  traefik-proxy-network:
    external: true
    name: ${TRAEFIK_NETWORK}
  backend:
    driver: bridge

services:
  ### RabbitMQ
  rabbitmq:
    environment:
      - DOMAIN
      - RABBITMQ_IMAGE
      - RABBITMQ_VER
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
      - TRAEFIK_CERTRESOLVER
      - TRAEFIK_ENABLE
      - TRAEFIK_ENTRYPOINT
      - TRAEFIK_MIDDLEWARES
      - TRAEFIK_NETWORK
      - TRAEFIK_PORT
      - TRAEFIK_ROUTER_HTTP
      - TRAEFIK_ROUTER_HTTPS
      - TRAEFIK_TLS_ENABLE
    labels:
      # Traefik
      - "traefik.enable=${TRAEFIK_ENABLE}"
      - "traefik.docker.network=${TRAEFIK_NETWORK}"
      # HTTP
      - "traefik.http.routers.${TRAEFIK_ROUTER_HTTP}.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.${TRAEFIK_ROUTER_HTTP}.entrypoints=http"
      - "traefik.http.routers.${TRAEFIK_ROUTER_HTTP}.service=${TRAEFIK_ROUTER_HTTP}"
      - "traefik.http.services.${TRAEFIK_ROUTER_HTTP}.loadbalancer.server.port=${TRAEFIK_PORT}"
      - "traefik.http.routers.${TRAEFIK_ROUTER_HTTP}.middlewares=${TRAEFIK_MIDDLEWARES}"
      # HTTPS
      - "traefik.http.routers.${TRAEFIK_ROUTER_HTTPS}.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.${TRAEFIK_ROUTER_HTTPS}.entrypoints=https"
      - "traefik.http.routers.${TRAEFIK_ROUTER_HTTPS}.service=${TRAEFIK_ROUTER_HTTPS}"
      - "traefik.http.services.${TRAEFIK_ROUTER_HTTPS}.loadbalancer.server.port=${TRAEFIK_PORT}"
      - "traefik.http.routers.${TRAEFIK_ROUTER_HTTPS}.tls=${TRAEFIK_TLS_ENABLE}"
      - "traefik.http.routers.${TRAEFIK_ROUTER_HTTPS}.tls.certresolver=${TRAEFIK_CERTRESOLVER}"

    networks:
      - traefik-proxy-network
      - backend
    build:
      context: ./docker/rabbitmq
      args:
        # This is needed for passing environment variables to the docker build contect.
        - "RABBITMQ_VER=${RABBITMQ_VER}"
        - "RABBITMQ_IMAGE=${RABBITMQ_IMAGE}"
    restart: always
